---
AWSTemplateFormatVersion: 2010-09-09

Description: Nested Fargate Stack deployment

Metadata:

  Authors:
    Description: Nathan Glover (nathan@glovers.id.au)

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Project Information
      Parameters:
        - ProjectName
        - BucketName

    - Label:
        default: Networking Resources
      Parameters:
        - ClassB

    - Label:
        default: Base Fargate Cluster
      Parameters:
        - ClusterName

    - Label:
        default: Grafana Service
      Parameters:
        - ServiceName
        - ContainerImage
        - ContainerPort
        - ContainerCpu
        - ContainerMemory
        - DesiredCount
        - HealthEndpoint

    - Label:
        default: Elasticsearch Domain
      Parameters:
        - ElasticsearchDomainName

    ParameterLabels:
      ProjectName:
        default: Project Name
      BucketName:
        default: Bucket Name

      ClassB:
        default: (10.XXX.0.0/16)

      ClusterName:
        default: Cluster Name

      ServiceName:
        default: Service Name
      ContainerImage:
        default: Docker Image Name
      ContainerPort:
        default: Container Port
      ContainerCpu:
        default: Container Cpu
      ContainerMemory:
        default: Container Memory
      DesiredCount:
        default: Number of Tasks
      HealthEndpoint:
        default: Health Check Endpoint

      ElasticsearchDomainName:
        default: Elasticsearch Domain Name

Parameters:

  ProjectName:
    Description: Project Name (used for Tagging)
    Type: String
  BucketName:
    Description: Bucket name where nested templates live
    Type: String

  ClassB:
    Description: Class B of VPC (10.XXX.0.0/16)
    Type: Number

  ClusterName:
    Description: Fargate Cluster Name (will be exported for use with resources in this project)
    Type: String

  ServiceName:
    Type: String
    Description: Name given to the service being run on the Fargate Cluster
  ContainerImage:
    Type: String
    Description: The name of a docker image that should be run from ECR
  ContainerPort:
    Type: Number
    Description: What port number the application inside the docker container
  ContainerCpu:
    Type: Number
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Description: How many copies of the service task to run
  HealthEndpoint:
    Type: String
    Description: Health Endpoint to target via Application load balancer health checks

  ElasticsearchDomainName:
    Type: String
    Description: Elasticsearch Domain Name

Resources:

  # baseFargate:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     Parameters:
  #       ProjectName:
  #         !Ref ProjectName
  #       ClusterName:
  #         !Ref ClusterName
  #     TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/my-city/cloudformation/base/fargate-cluster.yaml'

  # baseNetworking:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     Parameters:
  #       ClassB:
  #         !Ref ClassB
  #     TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/my-city/cloudformation/base/vpc-networking.yaml'

  # grafanaService:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     Parameters:
  #       ServiceName:
  #         !Ref ServiceName
  #       VPCId:
  #         !GetAtt [ baseNetworking, Outputs.VPC ]
  #       PublicSubnetIDs:
  #         !GetAtt [ baseNetworking, Outputs.SubnetsPublic ]
  #       PrivateSubnetIDs:
  #         !GetAtt [ baseNetworking, Outputs.SubnetsPrivate ]
  #       FargateCluster:
  #         !GetAtt [ baseFargate, Outputs.FargateCluster ]
  #       ContainerImage:
  #         !Ref ContainerImage
  #       ContainerPort:
  #         !Ref ContainerPort
  #       ContainerCpu:
  #         !Ref ContainerCpu
  #       ContainerMemory:
  #         !Ref ContainerMemory
  #       DesiredCount:
  #         !Ref DesiredCount
  #       HealthEndpoint:
  #         !Ref HealthEndpoint
  #     TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/my-city/cloudformation/base/fargate-service.yaml'

  elasticDomain:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ElasticsearchDomainName:
          !Ref ElasticsearchDomainName
      TemplateURL: !Sub 'https://s3.amazonaws.com/${BucketName}/resources/my-city/cloudformation/base/elastic-domain.yaml'

# Outputs:

#   GrafanaEndpoint:
#     Description: API Endpoint for the Defense Service
#     Value: !GetAtt [ grafanaService, Outputs.EndpointUrl ]
